import blockchain;

vector String <byte>;

union Address {
    Script,
}

table Action {
    info_hash: Byte32,
    bytes: Bytes,
}

table ScriptAction {
    script_hash: Byte32,
    action: Action,
}

vector TypedMessageV1 <ScriptAction>;

union TypedMessage {
    TypedMessageV1,
}

table SighashWithAction {
    lock: Bytes,
    message: TypedMessage,
}

table Sighash {
    lock: Bytes,
}

table DappInfoV1 {
    name: String,
    url: String,
    script_hash: Byte32,
    schema: String,
    message_type: String,
}

union DappInfo {
    DappInfoV1,
}

vector DappInfos <DappInfo>;

union Scratch {
    ScriptAction,
}

option ScratchOpt (Scratch);

table SigningAction {
    flags: Uint64,
    address: Address,
    message: TypedMessage,
    skeleton_hash: Byte32,
    infos: DappInfos,
    scratch: ScratchOpt,
}

table OtxStart {
    start_input_cell: Uint32,
    start_output_cell: Uint32,
    start_cell_deps: Uint32,
    start_header_deps: Uint32,
}

table Otx {
    lock: Bytes,
    input_cells: Uint32,
    output_cells: Uint32,
    cell_deps: Uint32,
    header_deps: Uint32,
    message: TypedMessage,
}
